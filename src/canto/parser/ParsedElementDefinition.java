/* Canto Compiler and Runtime Engine
 * 
 * ParsedElementDefinition.java
 *
 * Copyright (c) 2018 by cantolang.org
 * All rights reserved.
 */

package canto.parser;

import canto.lang.*;

/**
 * Based on code generated by jjtree.
 *
 * @author Michael St. Hippolyte
 * @version $Revision: 1.8 $
 */
public class ParsedElementDefinition extends NamedDefinition implements Scoped {

    public ParsedElementDefinition(int id) {
        super();
    }

    /** Accept the visitor. **/
    public Object jjtAccept(CantoParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }

    public void init() {
        int len = children.length;
        if (len > 0) {
            AbstractNode node = children[0];
            Type type;
            NameNode name;
            AbstractNode contents;

            if (node instanceof Type) {
                type = (Type) node;
                name = (NameNode) children[1];
                contents = (len > 2 ? children[2] : null);
            } else {
                type = null;
                name = (NameNode) node;
                contents = (len > 1 ? children[1] : null);
            }

            if (name instanceof NameWithDims && !(contents instanceof ElementDefinition)) {
                contents = new ElementDefinition(this, contents);
            }

            init(type, name, contents);
        }
    }

    public void setModifiers(int access, int dur) {
        setAccess(access);
        setDurability(dur);
    }

    public NameNode getDefName() {
        return getNameNode();
    }
}
